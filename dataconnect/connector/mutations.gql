mutation CreateUser($email: String, $name: String, $avatarUrl: String) @auth(level: USER) {
  user_insert(data: { id_expr: "auth.uid", email: $email, name: $name, avatarUrl: $avatarUrl }) {
    id
  }
}

mutation CreateFile($id: String!, $name: String!, $mimeType: String!, $size: Int!, $trashed: Boolean!, $starred: Boolean!, $owner: String!, $shared: Boolean!, $parents: [String!]!, $webViewLink: String!, $iconLink: String!, $thumbnailLink: String, $createdAt: Timestamp!, $modifiedAt: Timestamp!) @auth(level: USER) {
  file_insert(data: { id: $id, name: $name, mimeType: $mimeType, size: $size, trashed: $trashed, starred: $starred, owner: $owner, shared: $shared, parents: $parents, webViewLink: $webViewLink, iconLink: $iconLink, thumbnailLink: $thumbnailLink, createdAt: $createdAt, modifiedAt: $modifiedAt, user: { id_expr: "auth.uid" } }) {
    id
  }
}

mutation CreateFolder($id: String!, $name: String!, $owner: String!, $shared: Boolean!, $parents: [String!]!, $webViewLink: String!, $createdAt: Timestamp!, $modifiedAt: Timestamp!) @auth(level: USER) {
  folder_insert(data: { id: $id, name: $name, owner: $owner, shared: $shared, parents: $parents, webViewLink: $webViewLink, createdAt: $createdAt, modifiedAt: $modifiedAt, user: { id_expr: "auth.uid" } }) {
    id
  }
}

mutation CreateDuplicate($files: [FileInput!]!) @auth(level: USER) {
  duplicate_insert(data: { files: $files, user: { id_expr: "auth.uid" } }) {
    id
  }
}

mutation CreateRecommendation($file: FileInput!, $action: String!, $reason: String!) @auth(level: USER) {
  recommendation_insert(data: { file: $file, action: $action, reason: $reason, user: { id_expr: "auth.uid" } }) {
    id
  }
}

mutation CreateScanJob($status: String!, $progress: Int!) @auth(level: USER) {
  scanJob_insert(data: { status: $status, progress: $progress, user: { id_expr: "auth.uid" } }) {
    id
  }
}

mutation UpdateScanJob($id: String!, $status: String, $progress: Int) @auth(level: USER) {
  scanJob_update(key: { id: $id }, data: { status: $status, progress: $progress }) {
    id
  }
}